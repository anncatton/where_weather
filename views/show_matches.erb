<!--still need search bar -->

<div id="matches">
  <h3 class="section_header">Matches Around the World
    <span class="section_header percentage hidden">Similarity</span>
  </h3>
    <% if sorted_matches.empty? %>
      <div>Nope. Looks like your weather is unique!</div>
    <% else %>
      <% sorted_matches.each do |ea| %>
        <%= erb :_match_view, :locals => {matching_location: ea} %>
      <% end %>
    <% end %>
  <% end %>
</div>

</div>
<div id="map"></div>

<script>
  function initMap() {

    var centralLatLng = {lat: 30, lng: 10.1340487 };
    var matchMarkers = []
    var iconBase = 'http://maps.google.com/mapfiles/ms/icons/'

    var star = {
      path: google.maps.SymbolPath.CIRCLE,
      fillColor: 'orange',
      fillOpacity: 1,
      scale: 5,
      strokeColor: 'darkblue',
      strokeWeight: 1.2
    };

    var dot = {
      path: google.maps.SymbolPath.CIRCLE,
      fillColor: 'gold',
      fillOpacity: 1,
      scale: 5,
      strokeColor: 'darkblue',
      strokeWeight: 1.2
    }

    var icons = {
     queryLocation: {
       icon: star
     },
     matchLocation: {
      icon: dot
     }
    };

    var worldMap = new google.maps.Map(document.getElementById('map'), {
      minZoom: 2,
      zoom: 2,
      center: centralLatLng
    });

    var $matches = $('.info-values');
    var $query = $('.section_header');
    var infoWindow = new google.maps.InfoWindow({
      content: ''
    });

    function mapQueryLocation() {
      createMarker($query, 'queryLocation');
    }

    function addAListener(marker, markerInfo, content){
      marker.addListener('click', function() {
        infoWindow.close();
        infoWindow.setContent(content);
        markerInfo.open(worldMap, marker);
      });
    }

    function mapMatches() {
      
      if ($matches.length > 0) {
        $('#map').removeClass('hidden');
        $('.percentage').removeClass('hidden');

        $matches.each(function(index, ea) {
          createMarker(ea, 'matchLocation');
        });
      } else {
        $('#map').addClass('hidden');
        $('.percentage').addClass('hidden');
      }
    }

    function createMarker(location, feature) {

      var lat = $(location).data('lat');
      var lng = $(location).data('lng');
      var city = $(location).data('city');
      var country = $(location).data('country');
      var stationID = $(location).data('station-id');

      if (feature == 'queryLocation') {
        var conditions = $('#current-conditions').find('.condition-value').data('query-conditions');
        var temp = $('.temp').data('query-temp');
        var dewpoint = $('.dewpoint').data('query-dewpoint');
        var humidity = $('.humidity').data('query-humidity');
        var windKPH = $('.wind-kph').data('query-wind-kph');
      } else {
        var conditions = $('.info-values.' + stationID).data('conditions');
        var temp = $('.info-values.' + stationID).data('temp');
        var dewpoint = $('.info-values.' + stationID).data('dewpoint');
        var humidity = $('.info-values.' + stationID).data('humidity');
        var windKPH =$('.info-values.' + stationID).data('wind-kph');
      };

      var marker = new google.maps.Marker({
        position: {lat: Number(lat), lng: Number(lng)},
        map: worldMap,
        title: city + ", " + country,
        icon: icons[feature].icon,
      });

      if (windKPH == "Not observed") {
        windDiv = '<div>Wind: ' + windKPH + '</div>';
      } else {
        windDiv = '<div>Wind: ' + windKPH + ' kph</div>';
      }

      var content = '<div id="info-window">' +
        '<span>' + city + ', </span>' +
        '<span>' + country + '</span>' +
        '<div>Conditions: ' + conditions + '</div>' +
        '<div>Temperature: ' + temp + ' C</div>' +
        '<div>Dewpoint: ' + dewpoint + ' C</div>' +
        '<div>Humidity: ' + humidity + ' %</div>' +
        windDiv +
        '</div>';

      matchMarkers.push(marker);
      addAListener(marker, infoWindow, content);
    }

    mapQueryLocation();
    mapMatches();

  }
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=<%= google_map_key %>&callback=initMap"></script>